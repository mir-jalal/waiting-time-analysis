name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'src/wta/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'src/wta/**'
      - '.github/workflows/**'

env:
  DOCKERHUB_USERNAME: nokal
  DOCKERHUB_REPO: nokal/waiting-time-analysis

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install the application
        shell: bash
        run: |
          pip install poetry
          poetry install
          poetry run wta --help

      - name: Test the build
        shell: bash
        run: |
          poetry run pytest -v --durations=0 --cov-report xml:pytest_coverage.xml --cov src/wta/ tests

      - name: Upload the coverage report
        uses: actions/upload-artifact@v3
        with:
          name: pytest_coverage.xml
          path: /usr/src/app/pytest_coverage.xml


  docker-build-push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version
        id: get_version
        run: |
          pip install poetry
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:latest, ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}, ${{ env.DOCKERHUB_REPO }}:${{ steps.get_version.outputs.version }}
          file: Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64

      - name: Generate changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md
          git log --pretty=format:"%h - %s (%an)" $(git describe --tags --abbrev=0)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md

      - name: Assign a git version tag and push it
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push --tags
        if: github.ref == 'refs/heads/master'

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{ steps.get_version.outputs.version }}
          body_path: CHANGELOG.md
